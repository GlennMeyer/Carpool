<div class='row'>
	<div class='col s2'>&nbsp;</div>
	<div class='col s8'>
		<h3>This is where you will instantiate a CarPool</h3>
		<p>For the meetup location, provide a public location that you are willing to meet people at.  For the dropoff location, provide another public location that is somewhere close to your work where you are willing to drop people off at.</p>
	</div>
	<div class='col s2'></div>
</div>
<!-- <div id="map-canvas" style="height: 50%; width: 66.6%; display: block; margin-left: auto; margin-right: auto;">
</div> -->
<div class="row"><%= form_for @commute, :url => { :action => "create" }, :html => {:id => "car_pool_form" } do |f| %>
	<div class='container'>
		<div class="col s6">
			<div class="row">
				<div class="input-field">
					<%= f.label :meetup_street %>
					<%= f.text_field :meetup_street %>
				</div>
			</div>
			<div class="row">
				<div class="input-field">
					<%= f.label :meetup_city %>
					<%= f.text_field :meetup_city %>
				</div>
			</div>
			<div class="row">
				<div class="input-field">
					<%= f.label :meetup_state %>		
					<%= f.text_field :meetup_state %>
				</div>
			</div>
		</div>
		<div class="col s6">
			<div class="row">
				<div class="input-field">
					<%= f.label :dropoff_street %>
					<%= f.text_field :dropoff_street %>
				</div>
			</div>
			<div class="row">
				<div class="input-field">
					<%= f.label :dropoff_city %>
					<%= f.text_field :dropoff_city %>
				</div>
			</div>
			<div class="row">
				<div class="input-field">
					<%= f.label :dropoff_state %>
					<%= f.text_field :dropoff_state %>
				</div>
			</div>
		</div>
		<div class="row">
			<div class="col s4">
				<%= f.label :meetup_time %>
				<%= f.select(:meetup_time) do %>
					<% [['06 AM', '06:00:00'],['07 AM', '07:00:00'],['08 AM', '08:00:00'],['09 AM', '09:00:00'],['10 AM', '10:00:00'],['11 AM', '11:00:00'],['12 AM', '12:00:00']].each do |c| -%>
						<%= content_tag(:option, c.first, value: c.last) %>
					<% end %>
				<% end %>
			</div>
			<div class="col s4">
				<%= f.label :dropoff_time %>
				<%= f.select(:dropoff_time) do %>
					<% [['03 PM', '15:00:00'],['04 PM', '16:00:00'],['05 PM', '17:00:00'],['06 PM', '18:00:00'],['07 PM', '19:00:00'],['08 PM', '20:00:00'],['09 PM', '21:00:00']].each do |c| -%>
						<%= content_tag(:option, c.first, value: c.last) %>
					<% end %>
				<% end %>
			</div>
			<div class="col s4">
				<%= f.label :search_distance %>
				<p class="range-field">
    				<input type="range" name='commute[search_distance]' id="commute_search_distance" min="1" max="10" value='5'/>
  				</p>
			</div>
		</div>
		<%= f.hidden_field :meetup_lat %>
		<%= f.hidden_field :meetup_lng %>
		<%= f.hidden_field :dropoff_lat %>
		<%= f.hidden_field :dropoff_lng %>
	</div>
	<div class="row">
		<div class="col s5">&nbsp;</div>
		<div class="col s2">
			<button class="btn waves-effect waves-light" type="submit" name="action">Create Commute
    			<i class="mdi-content-send right"></i>
  			</button>
		</div>
		<div class="col s5">&nbsp;</div>
	</div>
	<% end %>
</div>

<script type="text/javascript">
	// Google Maps API - Map Initialization

	// function initialize() {
	// 	geocoder = new google.maps.Geocoder();
	// // 	var mapOptions = {
	// // 		center: { lat: 30.264477, lng: -97.746192},
	// // 		zoom: 12
	// // 	};
	// // 	var map = new google.maps.Map(document.getElementById('map-canvas'),
	// //     mapOptions);
	// }
	// google.maps.event.addDomListener(window, 'load', initialize);
    // End of Map Initialization


    // Function for geocoding the Address, City, and State into LatLong.
	var geocoder = new google.maps.Geocoder();

    function codeAddress() {
	    var meetupAddress = document.getElementById("commute_meetup_street").value + " " + document.getElementById("commute_meetup_city").value + " " + document.getElementById("commute_meetup_state").value;
	    geocoder.geocode( { 'address': meetupAddress}, function(results, status) {
	    	if (status == google.maps.GeocoderStatus.OK) {
	        	// map.setCenter(results[0].geometry.location);
	        	// var marker = new google.maps.Marker({
	         //    	map: map,
	         //    	position: results[0].geometry.location
	        	// });
	    		console.log(results[0].geometry.location)
	    		$('#commute_meetup_lat').val(results[0].geometry.location.k)
	    		$('#commute_meetup_lng').val(results[0].geometry.location.D)
	    	} else {
	    		alert("Meet-up Geocode was not successful for the following reason: " + status);
	    	}
		});
		var dropoffAddress = document.getElementById("commute_dropoff_street").value + " " + document.getElementById("commute_dropoff_city").value + " " + document.getElementById("commute_dropoff_state").value;
	    geocoder.geocode( { 'address': dropoffAddress}, function(results, status) {
	    	if (status == google.maps.GeocoderStatus.OK) {
	        	// map.setCenter(results[0].geometry.location);
	        	// var marker = new google.maps.Marker({
	         //    	map: map,
	         //    	position: results[0].geometry.location
	        	// });
	    		console.log(results[0].geometry.location)
	    		$('#commute_dropoff_lat').val(results[0].geometry.location.k)
	    		$('#commute_dropoff_lng').val(results[0].geometry.location.D)
	    	} else {
	    		alert("Drop-off Geocode was not successful for the following reason: " + status);
	    	}
		});
	}
	// End of function

	$(document).ready(function(){
		$('select').material_select();
	})

	
	$("[name='action']").hover(function(){
		codeAddress()
	})
</script>
